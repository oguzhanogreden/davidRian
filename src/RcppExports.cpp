// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// dcdensC
NumericVector dcdensC(NumericVector x, int k, double mean, double sd, NumericVector phi);
RcppExport SEXP _davidRian_dcdensC(SEXP xSEXP, SEXP kSEXP, SEXP meanSEXP, SEXP sdSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(dcdensC(x, k, mean, sd, phi));
    return rcpp_result_gen;
END_RCPP
}
// dcGrad_
NumericVector dcGrad_(double x, int k, NumericMatrix c, NumericVector phi);
RcppExport SEXP _davidRian_dcGrad_(SEXP xSEXP, SEXP kSEXP, SEXP cSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type c(cSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(dcGrad_(x, k, c, phi));
    return rcpp_result_gen;
END_RCPP
}
// rdc
NumericVector rdc(int n, int k, double mean, double sd, NumericVector phi);
RcppExport SEXP _davidRian_rdc(SEXP nSEXP, SEXP kSEXP, SEXP meanSEXP, SEXP sdSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< double >::type sd(sdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(rdc(n, k, mean, sd, phi));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_davidRian_dcdensC", (DL_FUNC) &_davidRian_dcdensC, 5},
    {"_davidRian_dcGrad_", (DL_FUNC) &_davidRian_dcGrad_, 4},
    {"_davidRian_rdc", (DL_FUNC) &_davidRian_rdc, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_davidRian(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
