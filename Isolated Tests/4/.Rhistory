t(res)
res4i <- readRDS("Test4i.RDS")
res4i
K <- unique(res4$K.Var2)
sim_pars <- expand.grid(K)
sim_pars
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 12)]
qp <- seq(-6, 6, length.out = 121)
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = c(77.32, 78.51, 76.33, 77.16)),
colour = "red", size=1.1) +
ggtitle(paste("N =", x[1], "|", "# DC Par =", x[2])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 4:(x[2]+3)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
plots4 <- apply(sim_pars, 1, function(x) {
browser()
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 12)]
qp <- seq(-6, 6, length.out = 121)
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = c(77.32, 78.51, 76.33, 77.16)),
colour = "red", size=1.1) +
ggtitle(paste("N =", x[1], "|", "# DC Par =", x[2])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 4:(x[2]+3)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
x
match_conds
plots4 <- apply(sim_pars, 1, function(x) {
browser()
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 12)]
qp <- seq(-6, 6, length.out = 121)
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = c(77.32, 78.51, 76.33, 77.16)),
colour = "red", size=1.1) +
ggtitle(paste("N =", x[1], "|", "# DC Par =", x[2])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 4:(x[2]+3)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
plots4 <- apply(sim_pars, 1, function(x) {
browser()
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- seq(-6, 6, length.out = 121)
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = c(77.32, 78.51, 76.33, 77.16)),
colour = "red", size=1.1) +
ggtitle(paste("N =", x[1], "|", "# DC Par =", x[2])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 4:(x[2]+3)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
plots4 <- apply(sim_pars, 1, function(x) {
browser()
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- seq(-6, 6, length.out = 121)
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
# stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = c(77.32, 78.51, 76.33, 77.16)),
colour = "red", size=1.1) +
ggtitle(paste("N =", x[1], "|", "# DC Par =", x[2])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
plots4 <- apply(sim_pars, 1, function(x) {
browser()
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- seq(-6, 6, length.out = 121)
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
# stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = c(77.32, 78.51, 76.33, 77.16)),
# colour = "red", size=1.1) +
ggtitle(paste("N =", x[1], "|", "# DC Par =", x[2])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
plots4 <- apply(sim_pars, 1, function(x) {
# browser()
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- seq(-6, 6, length.out = 121)
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
# stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = c(77.32, 78.51, 76.33, 77.16)),
# colour = "red", size=1.1) +
ggtitle(paste("N =", x[1], "|", "# DC Par =", x[2])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
plots4
plots4[[1]]
plots4[[2]]
load("e-table.Rdata")
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- seq(-6, 6, length.out = 121)
browser()
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = c(77.32, 78.51, 76.33, 77.16)),
colour = "red", size=1.1) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
gTheta
rr
plot(rr)
ggplot(data.frame(X = qp), aes(x=X)) +
geom_line(data.frame(Y = rr), aes(y=rr))
rr
ggplot(data.frame(X = qp), aes(x=X)) +
geom_line(data = data.frame(Y = rr), aes aes(y=rr))
ggplot(data.frame(X = qp), aes(x=X)) +
geom_line(data = data.frame(Y = rr), aes = aes(y=rr))
ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_line(aes(x=X, y=rr))
ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_point(aes(x=X, y=rr))
ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_point(aes(x=X, y=..density..))
ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_histogram(aes(x=X, y=..density..))
ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_point(aes(x=X, y=..density..))
ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_point(aes(x=X, y=..density..))
ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_point(aes(x=X, y=rr/sum(rr)))
base_plot <- ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_point(aes(x=X, y=rr/sum(rr))) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
base_plot
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- as.vector(gTheta[[1]])
# browser()
base_plot <- ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_point(aes(x=X, y=rr/sum(rr))) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
plots4[[1]]
plots4[[2]]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = 1)
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- as.vector(gTheta[[1]])
# browser()
base_plot <- ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_point(aes(x=X, y=rr/sum(rr))) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = 1)
}
base_plot
})
plots44
plots4
# browser()
base_plot <- ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_line(aes(x=X, y=rr)) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- as.vector(gTheta[[1]])
# browser()
base_plot <- ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
geom_line(aes(x=X, y=rr)) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = 1)
}
base_plot
})
plots4[[4]]
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- as.vector(gTheta[[1]])
# browser()
base_plot <- ggplot(data.frame(X = qp, Y = rr), aes(x=X)) +
# geom_line(aes(x=X, y=rr)) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = 1)
}
base_plot
})
plots4[[4]]
plots4[[3]]
plots4[[2]]
plots4[[1]]
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- as.vector(gTheta[[1]])
# browser()
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = 1)
}
base_plot
})
plots4[[3]]
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- as.vector(gTheta[[1]])
phi <- res_subs[i, 1:(x[1]+1)]
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
base_plot
})
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
browser()
qp <- as.vector(gTheta[[1]])
phi <- x[1, 1:(x[1]+1)]
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
base_plot
})
qp
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
browser()
qp <- as.vector(gTheta[[1]])
phi <- x[1, 1:(x[1]+1)]
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
base_plot
})
phi
x
sim_pars
plots4 <- apply(sim_pars, 1, function(x) {
browser()
match_conds <- (res4i[,1] == x[1])
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- as.vector(gTheta[[1]])
phi <- x[1, 1:(x[1]+1)]
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
base_plot
})
res4i
x
match_conds <- (res4i[,1] == x)
ncol(res4i)
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
res_subs
qp <- as.vector(gTheta[[1]])
phi <- x[1, 1:(x[1]+1)]
phi <- x[1:(x[1]+1)]
phi
x
res4i
phi <- res4i[match_conds, 2:(x[1])]
phi
phi <- res4i[match_conds, 2:(x[1]+1)]
phi
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x)
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- as.vector(gTheta[[1]])
phi <- res4i[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
plots4[[1]]
plots4[[2]]
plots4[[3]]
plots4[[4]]
plots4[[5]]
plots4[[6]]
plots4[[7]]
plots4[[8]]
plots4
source('G:/MEGA/Ubuntu/Documents/PhD/phd-docs/dcIRT/Ultimate Tests/4/../lib.R', echo=TRUE)
fTheta <- gTheta[[1]] * rr
obs_m <- sum(fTheta) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
sim_pars <- expand.grid(1:R, K)
res_ii <- apply(sim_pars, 1, function(x) {
browser()
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var2"]
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
rr_std <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
est <- thetas_to_par_Etable(as.vector(gTheta[[1]]), rr, k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
res_ii <- apply(sim_pars, 1, function(x) {
browser()
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var2"]
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
est <- thetas_to_par_Etable(as.vector(gTheta[[1]]), rr, k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var2"]
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
browser()
est <- thetas_to_par_Etable(as.vector(gTheta[[1]]), rr, k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
std_qp
fTheta <- gTheta[[1]] * rr
obs_m <- sum(fTheta) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
rr_std <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
plot(gTheta_std)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
plot(std_qp)
rr_std <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
plot(rr_std)
std_qp[,1]
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var2"]
# browser()
est <- thetas_to_par_Etable(std_qp[,1], rr_std, k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var2"]
# browser()
est <- thetas_to_par_Etable(std_qp[,1], rr_std, k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
rr_std <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
sim_pars <- expand.grid(1:R, K)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var2"]
# browser()
est <- thetas_to_par_Etable(std_qp[,1], rr_std, k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
saveRDS(as.data.frame(t(res_ii)), file="Test4ii.RDS")
t(res_ii)
fTheta <- gTheta[[1]]
obs_m <- sum(fTheta) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
rr_std <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
sim_pars <- expand.grid(1:R, K)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var2"]
# browser()
est <- thetas_to_par_Etable(std_qp[,1], rr_std, k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
rr_std <- std_qp[,2] / sum(std_qp[,2])
sim_pars <- expand.grid(1:R, K)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var2"]
# browser()
est <- thetas_to_par_Etable(std_qp[,1], rr_std, k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
plot(rr_std, std_qp)
plot(std_qp[,1], rr_std)
saveRDS(as.data.frame(t(res_ii)), file="Test4ii.RDS")
load("e-table.Rdata")
fTheta <- gTheta[[1]]
obs_m <- sum(fTheta) / sum(rr)
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
rr_std <- std_qp[,2] / sum(std_qp[,2])
plot(gTheta[[1]]), rr)
plot(gTheta[[1]], rr)
std_qp[,1]
rr_std
fTheta <- gTheta[[1]]
obs_m <- sum(fTheta) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
plot(std_qp)
rr_std <- std_qp[,2] / sum(std_qp[,2])
plot(std_qp[,1], rr_std)
sm(rr_std)
sum(rr_std)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var2"]
# browser()
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
