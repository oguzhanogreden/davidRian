apply(sim_pars, 1, function(x) {
# browser()
match_conds <- (res4i[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
baseplot4 <<- baseplot4 +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
library(plyr)
plots1 <- a_ply(sim_pars[order(sim_pars$Var1),], 1, function(x) {
match_conds <- (res1[,2] == x[1]) & (res1[,3] == x[2])
res_subs <- res1[match_conds, c(1:(x[2]+3), 12)]
qp <- seq(-6, 6, length.out = 121)
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = dens_bm, colour = "red", size=1.1) +
ggtitle(paste("N =", x[1], "|", "# DC Par =", x[2])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 4:(x[2]+3)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
plots1 <- apply(sim_pars[order(sim_pars$Var1),], 1, function(x) {
match_conds <- (res1[,2] == x[1]) & (res1[,3] == x[2])
res_subs <- res1[match_conds, c(1:(x[2]+3), 12)]
qp <- seq(-6, 6, length.out = 121)
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = dens_bm, colour = "red", size=1.1) +
ggtitle(paste("N =", x[1], "|", "# DC Par =", x[2])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 4:(x[2]+3)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
sim_pars <- expand.grid(N, K)
plots1 <- apply(sim_pars[order(sim_pars$Var1),], 1, function(x) {
match_conds <- (res1[,2] == x[1]) & (res1[,3] == x[2])
res_subs <- res1[match_conds, c(1:(x[2]+3), 12)]
qp <- seq(-6, 6, length.out = 121)
base_plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = dens_bm, colour = "red", size=1.1) +
ggtitle(paste("N =", x[1], "|", "# DC Par =", x[2])) +
theme_minimal()
for (i in 1:nrow(res_subs)) {
phi <- res_subs[i, 4:(x[2]+3)]
base_plot <- base_plot + stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)),
alpha = .05)
}
base_plot
})
baseplot4 <- ggplot(data.frame(X = qp), aes(x=X))
a_ply(sim_pars, 1, function(x) {
# browser()
match_conds <- (res4i[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
baseplot4 <<- baseplot4 +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
})
apply(sim_pars, 1, function(x) {
# browser()
match_conds <- (res4i[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
baseplot4 <<- baseplot4 +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
})
K <- unique(res4i$K.Var2)
sim_pars <- expand.grid(K)
qp <- as.vector(gTheta[[1]])
baseplot4 <- ggplot(data.frame(X = qp), aes(x=X))
apply(sim_pars, 1, function(x) {
# browser()
match_conds <- (res4i[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
baseplot4 <<- baseplot4 +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
})
apply(sim_pars, 1, function(x) {
# browser()
match_conds <- (res4i[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
baseplot4 <<- baseplot4 +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1, color = x) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
})
K <- unique(res4i$K.Var2)
sim_pars <- expand.grid(K)
plots4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x)
res_subs <- res4i[match_conds, c(1:(x[1]+1), 10)]
qp <- as.vector(gTheta[[1]])
phi <- res4i[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
plot4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
plot_out4 <- plot_grid(plotlist = plot4, ncol = 2)
plot_out4
plot_out4 <- plot_grid(plotlist = plot4, ncol = 3)
plot_out4
plot4_e <- ggplot(data.frame(X = qp, Y = rr)) + geom_line()
plot4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
plot_out4 <- plot_grid(plotlist = list(plot4_e, plot4), ncol = 3)
plot_out4 <- plot_grid(plotlist = c(plot4_e, plot4), ncol = 3)
?plot_grid
plot4[[9]] <- plot4_e
plot_out4 <- plot_grid(plotlist = plot4[[9, 1:8]], ncol = 3)
plot_out4 <- plot_grid(plotlist = plot4[[c(9, 1:8)]], ncol = 3)
plot_out4 <- plot_grid(plotlist = plot4[c(9, 1:8)], ncol = 3)
plot4[c(9, 1:8)]
plot4_e <- ggplot(data.frame(X = qp, Y = rr), aes(x=X, y=Y)) + geom_line()
plot4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
plot4[[9]] <- plot4_e
plot_out4 <- plot_grid(plotlist = plot4[c(9, 1:8)], ncol = 3)
plot_out4
plot_out4
plot_out4 <- plot_grid(plotlist = plot4[c(9, 1:8)], ncol = 3)
ggsave("plot4.PNG", plot_out2, width = 9, height = 12, dpi = 450)
ggsave("plot4.PNG", plot_out4, width = 9, height = 12, dpi = 450)
plot4_e <- ggplot(data.frame(X = qp, Y = rr), aes(x=X, y=Y)) + geom_line() +
ggtitle("E-table")
plot4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = qp), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
plot4[[9]] <- plot4_e
plot_out4 <- plot_grid(plotlist = plot4[c(9, 1:8)], ncol = 3)
ggsave("plot4.PNG", plot_out4, width = 9, height = 12, dpi = 450)
K <- unique(res4i$K.Var2)
sim_pars <- expand.grid(K)
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
gTheta_std
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
rr_std
std_qp[,2]
sum(std_qp[,2])
rr_std <- std_qp[,2] / sum(std_qp[,2]) ** sum(rr)
rr_std
rr_std <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
rr_std
sum(rr)
sum(rr_std)
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
plot(std_q)
plot(std_qp)
source("lib.R")
res1 <- readRDS("1/Test1.RDS")
res2 <- readRDS("2/Test2.RDS")
load("4/e-table.Rdata")
res4i <- readRDS("4/Test4i.RDS")
res4ii <- readRDS("4/Test4ii.RDS")
res4ii
res4i
sim_pars
R <- 1 # Simulation runs
# N <- c(121, 1000)
K <- c(1:8)
sim_pars <- expand.grid(1:R, K)
sim_pars
expand.grid(K)
K <- c(1:8)
sim_pars <- expand.grid(K)
load("e-table.Rdata")
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var2"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
res_ii
t(res_ii)
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
plot(std_qp)
sum(rr)
sum(std_qp[,2])
std_qp[,2] <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
sum(std_qp[,2])
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
saveRDS(as.data.frame(t(res_ii)), file="Test4ii.RDS")
K <- unique(res4i$K.Var2)
sim_pars <- expand.grid(K)
obs_m <- sum(gTheta[[1]]) / sum(rr)
res4ii <- readRDS("4/Test4ii.RDS")
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[,2] <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
plot4_e <- ggplot(data.frame(X = qp, Y = rr), aes(x=X, y=Y)) + geom_line() +
ggtitle("E-table")
plot4_e <- ggplot(data.frame(X = std_qp[,1], Y = std_qp[,2]), aes(x=X, y=Y)) + geom_line() +
ggtitle("E-table")
plot4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4i[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = std_qp[,1]), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
plot4[[9]] <- plot4_e
plot_out4 <- plot_grid(plotlist = plot4[c(9, 1:8)], ncol = 3)
ggsave("plot4ii.PNG", plot_out4, width = 9, height = 12, dpi = 450)
plot4 <- apply(sim_pars, 1, function(x) {
match_conds <- (res4ii[,1] == x)
phi <- res4i[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = std_qp[,1]), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
plot4[[9]] <- plot4_e
plot_out4 <- plot_grid(plotlist = plot4[c(9, 1:8)], ncol = 3)
ggsave("plot4ii.PNG", plot_out4, width = 9, height = 12, dpi = 450)
K <- unique(res4ii$K.Var2)
sim_pars <- expand.grid(K)
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
source("lib.R")
res4ii <- readRDS("4/Test4ii.RDS")
K <- unique(res4ii$K.Var2)
sim_pars <- expand.grid(K)
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
load("4/e-table.Rdata")
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[,2] <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
plot4ii_e <- ggplot(data.frame(X = std_qp[,1], Y = std_qp[,2]), aes(x=X, y=Y)) + geom_line() +
ggtitle("E-table")
plot4ii <- apply(sim_pars, 1, function(x) {
match_conds <- (res4ii[,1] == x)
phi <- res4ii[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = std_qp[,1]), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
sim_pars
K <- unique(res4ii$K.Var2)
K
K <- unique(res4ii$K.Var1)
sim_pars <- expand.grid(K)
res4i <- readRDS("4/Test4i.RDS")
res4i
K <- unique(res4ii$K.Var1)
sim_pars <- expand.grid(K)
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[,2] <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
plot4ii_e <- ggplot(data.frame(X = std_qp[,1], Y = std_qp[,2]), aes(x=X, y=Y)) + geom_line() +
ggtitle("E-table")
plot4ii <- apply(sim_pars, 1, function(x) {
match_conds <- (res4ii[,1] == x)
phi <- res4ii[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = std_qp[,1]), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
plot4[[9]] <- plot4_e
plot_out4 <- plot_grid(plotlist = plot4[c(9, 1:8)], ncol = 3)
plot4ii[[9]] <- plot4ii_e
plot4ii[[9]] <- plot4ii_e
plot_out4ii <- plot_grid(plotlist = plot4ii[c(9, 1:8)], ncol = 3)
ggsave("plot4ii.PNG", plot_out4ii, width = 9, height = 12, dpi = 450)
res4i <- readRDS("4/Test4i.RDS")
res4i
c(77.25364, 78.47589, 76.65209, 77.55241, 76.53099, 77.33672)
phis <- c(77.25364, 78.47589, 76.65209, 77.55241, 76.53099, 77.33672)
mean(rdc(1000, 0, 1, phis))
library(davidRian)
phis <- c(77.25364, 78.47589, 76.65209, 77.55241, 76.53099, 77.33672)
mean(rdc(1000, 0, 1, phis))
mean(rdc(1000, 0, 1, phis))
sd(rdc(1000, 0, 1, phis))
sd(rdc(1000, 0, .5, phis))
sd(rdc(1000, 0, .7, phis))
sd(rdc(1000, 0, .9, phis))
sd(rdc(1000, 0, .8, phis))
sd(rdc(1000, 0, .78, phis))
sd(rdc(1000, 0, .74, phis))
hist(rdc(1000, 0, .74, phis))
curve(ddc(x, 0, .74, phis))
curve(ddc(x, 0, .74, phis), -4, 4)
curve(ddc(x, 0, 1, phis), -4, 4)
curve(ddc(x, 0, .74, phis), -4, 4)
phi4 <- c(77.25364, 78.47589, 76.65209, 77.55241, 76.53099, 77.33672)
phi8 <- c(77.25359, 78.47643, 76.65138, 77.55343, 76.52473, 77.40343, 76.22405, 77.09202)
mean(rdc(1000, 0, 1, phi4))
sd(rdc(1000, 0, .74, phi4))
mean(rdc(1000, 0, 1, phi4))
sd(rdc(1000, 0, 1, phi4))
sd(rdc(1000, 0, .74, phi4))
curve(ddc(x, 0, .74, phi4), -4, 4)
mean(rdc(1000, 0, 1, phi6))
mean(rdc(1000, 0, 1, phi8))
sd(rdc(1000, 0, 1, phi8))
sd(rdc(1000, 0, .74, phi8))
sd(rdc(1000, 0, .76, phi8))
sd(rdc(1000, 0, .78, phi8))
curve(ddc(x, 0, .78, phi8), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(75.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -4, 4)
1
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.5)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 76.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 76.8)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 77.2, 76.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 74.2, 76.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 75.2, 76.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 75.1, 76.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 75.2)), -4, 4)
phi8 <- c((77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 74.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 75.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 79.4, 76.2, 77.1)), -4, 4)
7
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 77.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 75.5, 77.4, 76.2, 77.1)), -4, 4)
6
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 75.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, .78, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, 1, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -4, 4)
curve(ddc(x, 0, 1, c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)), -6, 6)
library(davidRian)
phi4 <- c(77.25364, 78.47589, 76.65209, 77.55241, 76.53099, 77.33672)
mean(rdc(1000, 0, 1, phi4))
sd(rdc(1000, 0, 1, phi4))
sd(rdc(1000, 0, .74, phi4))
curve(ddc(x, 0, .74, phi4), -4, 4)
phi8 <- c(77.3, 78.5, 76.7, 77.6, 76.5, 77.4, 76.2, 77.1)
mean(rdc(1000, 0, 1, phi8))
sd(rdc(1000, 0, 1, phi8))
sd(rdc(1000, 0, .78, phi8))
curve(ddc(x, 0, .78, phi8), -4, 4)
curve(ddc(x, 0, 1, phi8), -4, 4)
curve(ddc(x, 0, 1, phi8+1), -4, 4)
curve(ddc(x, 0, 1, phi8+.1), -4, 4)
curve(ddc(x, 0, 1, phi8-.1), -4, 4)
curve(ddc(x, 0, 1, phi8-.2), -4, 4)
curve(ddc(x, 0, 1, phi8-.3), -4, 4)
curve(ddc(x, 0, 1, phi8-.4), -4, 4)
curve(ddc(x, 0, 1, phi8-.8), -4, 4)
curve(ddc(x, 0, 1, phi8-.12), -4, 4)
curve(ddc(x, 0, 1, phi8-1.2), -4, 4)
mean(rdc(1000, 0, 1, phi8-1.2))
sd(rdc(1000, 0, 1, phi8-1.2))
?expand.grid
lapply(1:8, seq(76, 78, .1))
lapply(1:8, function(x) seq(76, 78, .1))
pars_grid <- expand.grid(pars)
pars <- lapply(1:8, function(x) seq(76, 78, .1))
pars_grid <- expand.grid(pars)
library(shiny); runApp('G:/MEGA/Ubuntu/Documents/PhD/phd-code/shinyAppDists/davidianApp.R')
setwd("G:/MEGA/Ubuntu/Documents/PhD/phd-docs/dcIRT/Isolated Tests/4")
source("../lib.R")
K <- c(1:8)
sim_pars <- expand.grid(K)
load("e-table.Rdata")
res_i <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(as.vector(gTheta[[1]]), rr, k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
sum(std_qp[,2])
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
saveRDS(as.data.frame(t(res_ii)), file="Test4ii.RDS")
res4ii <- readRDS("Test4ii.RDS")
K <- unique(res4ii$K.Var1)
sim_pars <- expand.grid(K)
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[,2] <- std_qp[,2] / sum(std_qp[,2]) * sum(rr)
plot4ii_e <- ggplot(data.frame(X = std_qp[,1], Y = std_qp[,2]), aes(x=X, y=Y)) + geom_line() +
ggtitle("E-table")
plot4ii <- apply(sim_pars, 1, function(x) {
match_conds <- (res4ii[,1] == x)
phi <- res4ii[match_conds, 2:(x[1]+1)]
plot <- ggplot(data.frame(X = std_qp[,1]), aes(x=X)) +
stat_function(fun = ddc, args = list(mean = 0, sd = 1, phi = unlist(phi)), alpha = 1) +
ylim(0, .5) +
ggtitle(paste("# DC Par =", x[1])) +
theme_minimal()
plot
})
plot4ii[[9]] <- plot4ii_e
plot_out4ii <- plot_grid(plotlist = plot4ii[c(9, 1:8)], ncol = 3)
plot_out4ii
dev.off()
dev.off()
plot_out4ii
res1 <- readRDS("Test1.RDS")
res1 <- readRDS("../1/Test1.RDS")
res1
res1[res1$K.Var3 == 8,]
