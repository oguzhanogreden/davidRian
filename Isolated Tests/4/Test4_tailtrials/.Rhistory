delta <- c(.1, .2, .3, .4)
eta <- 1.6
trc <- function(delta, theta, eta) {
cthetaeta <- delta * (theta ^ eta)
cthetaeta / (1 + cthetaeta)
}
wrap_trc <- function(x, delta, eta) {
trc(x, delta, eta)
}
curve(wrap_trc, delta = delta[1], eta)
curve(wrap_trc, delta = delta[1], eta = eta)
curve(wrap_trc(x, delta = delta[1], eta = eta))
curve(wrap_trc(x, delta = delta[1], eta = eta), from = 0, to = 10)
N <- 120
theta <- seq(.001, 6, length.out = N)
delta <- c(1, 2, 3, 4)
eta <- 1
trc <- function(delta, theta, eta) {
cthetaeta <- delta * (theta ^ eta)
cthetaeta / (1 + cthetaeta)
}
wrap_trc <- function(x, delta, eta) {
trc(x, delta, eta)
}
curve(wrap_trc(x, delta = delta[1], eta = eta), from = 0, to = 10)
curve(wrap_trc(x, delta = delta[2], eta = eta), from = 0, to = 10, add = T)
curve(wrap_trc(x, delta = delta[3], eta = eta), from = 0, to = 10, add = T)
curve(wrap_trc(x, delta = delta[4], eta = eta), from = 0, to = 10, add = T)
curve(1 - wrap_trc(x, delta = delta[1], eta = eta), from = 0, to = 10)
curve(wrap_trc(x, delta = delta[2], eta = eta) - wrap_trc(x, delta = delta[3], eta = eta), from = 0, to = 10, add = T)
curve(1 - wrap_trc(x, delta = delta[1], eta = eta), from = 0, to = 10)
curve(wrap_trc(x, delta = delta[2], eta = eta) - wrap_trc(x, delta = delta[3], eta = eta), from = 0, to = 10, add = T)
curve(wrap_trc(x, delta = delta[2], eta = eta) - wrap_trc(x, delta = delta[3], eta = eta), from = 0, to = 10, add = T)
curve(wrap_trc(x, delta = delta[2], eta = eta) - wrap_trc(x, delta = delta[3], eta = eta), from = 0, to = 10, add = T)
curve(wrap_trc(x, delta = delta[1], eta = eta) - wrap_trc(x, delta = delta[2], eta = eta), from = 0, to = 10, add = F)
theta <- seq(-4,4, .1)
item1_eta <- item1_a
item1_d1 <- exp(item1_g1)
item1_d2 <- exp(item1_g2)
item1_g1 <- 1.31
item1_g2 <- -0.69
item1_g3 <- -2.94
item1_g4 <- -5.09
theta <- seq(-4,4, .1)
item1_eta <- item1_a
item1_d1 <- exp(item1_g1)
item1_d2 <- exp(item1_g2)
item1_a <- 1.71
item1_eta <- item1_a
item1_d1 <- exp(item1_g1)
item1_d2 <- exp(item1_g2)
item1_d3 <- exp(item1_g3)
item1_d4 <- exp(item1_g4)
delta <- c(item1_d1, item1_d2, item1_d3, item1_d4)
N <- 120
theta <- seq(.001, 6, length.out = N)
delta <- c(item1_d1, item1_d2, item1_d3, item1_d4)
theta <- seq(-4,4, .1)
theta <- exp(theta)
theta
delta <- c(item1_d1, item1_d2, item1_d3, item1_d4)
eta <- 1
eta <- item1_eta
trc <- function(delta, theta, eta) {
cthetaeta <- delta * (theta ^ eta)
cthetaeta / (1 + cthetaeta)
}
wrap_trc <- function(x, delta, eta) {
trc(x, delta, eta)
}
curve(wrap_trc(x, delta = delta[1], eta = eta), from = 0, to = 10)
curve(wrap_trc(x, delta = delta[2], eta = eta), from = 0, to = 10, add = T)
curve(wrap_trc(x, delta = delta[3], eta = eta), from = 0, to = 10, add = T)
curve(wrap_trc(x, delta = delta[4], eta = eta), from = 0, to = 10, add = T)
curve(1 - wrap_trc(x, delta = delta[1], eta = eta), from = 0, to = 10)
curve(wrap_trc(x, delta = delta[1], eta = eta) - wrap_trc(x, delta = delta[2], eta = eta), from = 0, to = 10, add = F)
curve(1 - wrap_trc(x, delta = delta[1], eta = eta), from = 0, to = 10)
curve(wrap_trc(x, delta = delta[1], eta = eta) - wrap_trc(x, delta = delta[2], eta = eta), from = 0, to = 10, add = T)
curve(wrap_trc(x, delta = delta[3], eta = eta), from = 0, to = 10, add = T)
curve(wrap_trc(x, delta = delta[4], eta = eta), from = 0, to = 10, add = T)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(.1, nitem), delta = rep(.1, 45), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(.1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
long
table(long$response)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
long$response
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
# Not tested yet.
grm.fit <- stan(file = "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/LLgrm.stan",
data = stan_data, iter = 500, chains = 1, init = list(
list(mu = rep(1, nitem), delta = rep(.1, 15), theta=rep(.5, npers), eta=rep(1,nitem))
),
verbose=F)
fit.sum <- summary(grm.fit)
fit.sum
hist(fit.sum$summary[grepl("theta", row.names(fit.sum$summary)),"mean"])
fit.sum$summary
fit.sum$summary[[1]]
fit.sum$summary[1]
head(fit.sum$summary)
sim_parameter_1 <- c(1, 2, 3, 4, 5)
sim_parameter_2 <- c(50, 100, 200, 400, 800)
expand.grid(sim_parameter_1, sim_parameter_2)
25 %% 20
20 %% 20
hist(fit.sum$summary[grepl("theta", row.names(fit.sum$summary)),"mean"])
?stan
plot(grm.fit)
?stan
print(grm.fit)
plot(grm.fit, show_density = TRUE, ci_level = 0.5, fill_color = "purple")
plot(grm.fit, plotfun = "hist", pars = "theta", include = FALSE)
plot(grm.fit, plotfun = "trace", pars = c("mu", "tau"), inc_warmup = TRUE)
plot(grm.fit, plotfun = "trace", pars = c("theta"), inc_warmup = TRUE)
save(grm.fit, "G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/examplefit.Rdata")
save(grm.fit, file="G:/MEGA/Ubuntu/Documents/PhD/phd-code/Stan/examplefit.Rdata")
?sn
library(sn)
?sn
install.packages("sn")
library(sn)
?sn
dsn
?dsn
curve(dsn)
curve(dsn, -4, 5)
curve(dsn, -4, 5)
curve(dsn, -4, 4)
curve(dsn(x, xi = 0), -4, 4)
curve(dsn(x, xi = 5), -4, 4)
curve(dsn(x, xi = 0, alpha = +Inf), -4, 4)
curve(dsn(x, xi = 0, alpha = +Inf-1), -4, 4)
curve(dsn(x, xi = 0, alpha = +Inf/2), -4, 4)
curve(dsn(x, xi = 0, alpha = 99), -4, 4)
curve(dsn(x, xi = 0, alpha = 999), -4, 4)
curve(dsn(x, xi = 0, alpha = 9), -4, 4)
curve(dsn(x, xi = 0, alpha = 5), -4, 4)
curve(dsn(x, xi = 0, alpha = 2), -4, 4)
rlnorm(1000)
hist(rlnorm(1000))
hist(log(rlnorm(1000)))
hist(exp(rnorm(1000)))
hist(rlnorm(1000))
hist(rlnorm(1000))
write.csv(catresults$responses.df, file = "catresponses.csv")
save(catresults, file = "catresults.Rdata")
catresults <- asd
save(catresults, file = "catresults.Rdata")
catresults <- asd
"catresults"
catresults <- "asd"
save(catresults, file = "catresults.Rdata")
save(catresults, file = "catresults.Rdata")
plot(rlnorm(100))
hist(rlnorm(100))
df <- matrix(runif(100), rnorm(100), rnorm(100, -2, .2), rlnorm(100), ncol=4)
df <- matrix(runif(100), rnorm(100), rnorm(100, -2, .2), rlnorm(100), nrow = 100))
df <- matrix(runif(100), rnorm(100), rnorm(100, -2, .2), rlnorm(100), nrow = 100)
df <- matrix(c(runif(100), rnorm(100), rnorm(100, -2, .2), rlnorm(100)), nrow = 100)
df
View(long)
df[,5] <- rowSums(df)
rowSums(df)
head(df)
df <- cbind(df, rowSums(df))
hist(df[,5])
hist(df[,5])
df <- matrix(c(runif(100), runif(100), runif(100), runif(100), runif(100), runif(100), runif(100)), nrow = 100)
df <- cbind(df, rowSums(df))
hist(df[,5])
N <- 1000
N <- 1000
df <- matrix(c(runif(N), runif(N), runif(N), runif(N), runif(N), runif(N), runif(N)), nrow = N)
df <- cbind(df, rowSums(df))
hist(df[,5]
)
df <- cbind(df, rowSums(df)/ncol(df))
hist(df[,5])
source("lib.R")
curve(davidRian::ddc(77))
curve(davidRian::ddc(x, 0, 1, 77), -4, 4)
curve(davidRian::ddc(x, 0, 1, 27), -4, 4)
curve(davidRian::ddc(x, 0, 1, c(77, 25)), -4, 4)
curve(davidRian::ddc(x, 0, 1, c(77, 25)), -4, 4)
curve(davidRian::ddc(x, 0, 1, c(77, 75)), -4, 4)
curve(davidRian::ddc(x, 0, 1, c(77, 79)), -4, 4)
curve(davidRian::ddc(x, 0, 1, c(77, 79, 77)), -4, 4)
curve(davidRian::ddc(x, 0, 1, c(77, 79, 72)), -4, 4)
curve(davidRian::ddc(x, 0, 1, c(77, 79, 81), -4, 4)
curve(davidRian::ddc(x, 0, 1, c(77, 79, 41), -4, 4)
curve(davidRian::ddc(x, 0, 1, c(77, 79, 71, 55), -4, 4)
)
curve(davidRian::ddc(x, 0, 1, c(77, 79, 71, 55), -4, 4))
curve(davidRian::ddc(x, 0, 1, c(77, 79, 71, 55), from = -4, to = 4))
curve(davidRian::ddc(x, 0, 1, c(77, 79, 71, 55),) from = -4, to = 4)
curve(davidRian::ddc(x, 0, 1, c(77, 79, 71, 55)) from = -4, to = 4)
curve(davidRian::ddc(x, 0, 1, c(77, 79, 71, 55)), from = -4, to = 4)
curve(davidRian::ddc(x, 0, 1, c(77, 79, 55)), from = -4, to = 4)
curve(davidRian::ddc(x, 0, 1, c(77, 79, 12)), from = -4, to = 4)
curve(davidRian::ddc(x, 0, 1, c(77, 57, 12)), from = -4, to = 4)
curve(davidRian::ddc(x, 0, 1, c(77, 57, 572)), from = -4, to = 4)
curve(davidRian::ddc(x, 0, 1, c(77, 57, 57)), from = -4, to = 4)
curve(davidRian::ddc(x, 0, 1, c(77, 57, 57, 82)), from = -4, to = 4)
setwd("G:/MEGA/Ubuntu/Documents/PhD/phd-docs/dcIRT/Isolated Tests")
setwd("4")
source("../lib.R")
K <- c(1:8)
sim_pars <- expand.grid(K)
load("e-table.Rdata")
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
plot(gTheta[[1]], rr)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
plot(std_qp)
min(std_qp)
min(std_qp[,2])
min(rr)
std_qp
'
standardizeQuadrature
cbind(std_qp, ))
)
'
standardizeQuadrature
cbind(std_qp, rr)
library(davidRian)
ddc(seq(-6, 6, .1), 0, 1, c(77.32, 78.51, 76.33, 77.16)))
ddc(seq(-6, 6, .1), 0, 1, c(77.32, 78.51, 76.33, 77.16))
1e-06
setwd("Test4_tailtrials/")
source("../../lib.R")
K <- c(1:8)
sim_pars <- expand.grid(K)
load("e-table.Rdata")
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
plot(std_qp)
std_qp
std_qp[std_qp < 1e-06, 2]
std_qp[std_qp[,2] < 1e-06, 2]
std_qp[std_qp[,2] < 1e-06, 2] <- 1e-06
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
ddc(seq(-15, 15, .1), 0, 1, c(77.32, 78.51, 76.33, 77.16))
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < 1e-06, 2] <- 1e-46
plot(std_qp)
std_qp[std_qp[,2] < 1e-05, 2] <- 1e-46
plot(std_qp)
std_qp[std_qp[,2] < 1e-03, 2] <- 1e-46
plot(std_qp)
std_qp[std_qp[,2] < 1e-01, 2] <- 1e-46
plot(std_qp)
std_qp[std_qp[,2] < .01, 2] <- 1e-46
plot(std_qp)
std_qp[std_qp[,2] < 2, 2] <- 1e-46
plot(std_qp)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .1, 2] <- 1e-46
plot(std_qp)
std_qp[std_qp[,2] < .5, 2] <- 1e-46
plot(std_qp)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .2, 2] <- 1e-46
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .2, 2] <- 1e-46
plot(std_qp)
std_qp[std_qp[,2] < .25, 2] <- 1e-46
plot(std_qp)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .1, 2] <- 1e-46
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii_[4, 2:5]), from = -4, to = 4)
)
curve(davidRian::ddc(x, 0, 1, t(res_ii_[4, 2:5])), from = -4, to = 4)
curve(davidRian::ddc(x, 0, 1, t(res_ii[4, 2:5])), from = -4, to = 4)
t(res_ii[4, 2:5])
curve(davidRian::ddc(x, 0, 1, t(res_ii)[4, 2:5]), from = -4, to = 4)
t(res_ii)[4, 2:5]
std_qp[std_qp[,2] < .15, 2] <- 1e-46
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -4, to = 4)
plot(std_qp)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -6, to = 6)
std_qp[std_qp[,2] < .15, 2] <- 1e-90
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -6, to = 6)
std_qp[std_qp[,2] < .2, 2] <- 1e-90
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -6, to = 6)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .15, 2] <- 1e-90
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -6, to = 6)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
plot(std_qp)
std_qp[std_qp[,2] < .15, 2] <- 1e-90
plot(std_qp)
std_qp[std_qp[,2] < .175, 2] <- 1e-90
plot(std_qp)
std_qp[std_qp[,2] < .2, 2] <- 1e-90
plot(std_qp)
std_qp[std_qp[,2] < .4, 2] <- 1e-90
plot(std_qp)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .3, 2] <- 1e-90
plot(std_qp)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .25, 2] <- 1e-90
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[5, 2:9]), from = -6, to = 6)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[5, 2:6]), from = -6, to = 6)
std_qp[std_qp[,2] < .3, 2] <- 0
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -6, to = 6)
std_qp[std_qp[,2] < .2, 2] <- 0
plot(std_qp)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .2, 2] <- 0
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .15, 2] <- 0
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -6, to = 6)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[7, 2:8]), from = -6, to = 6)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[6, 2:7]), from = -6, to = 6)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[5, 2:6]), from = -6, to = 6)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -6, to = 6)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .1, 2] <- 0
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -6, to = 6)
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
std_qp[std_qp[,2] < .15, 2] <- 0
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -6, to = 6)
source('G:/MEGA/Ubuntu/Documents/PhD/phd-docs/dcIRT/Isolated Tests/lib.R', echo=TRUE)
obs_m <- sum(gTheta[[1]]) / sum(rr)
obs_sd <- sqrt(sum(rr * (gTheta[[1]] - obs_m)^2) / sum(rr))
gTheta_std <- (gTheta[[1]] - obs_m) / obs_sd
std_qp <- standardizeQuadrature(gTheta[[1]], gTheta_std, rr)
plot(std_qp)
res_ii <- apply(sim_pars, 1, function(x) {
seed <- runif(1, 1, 1e+9)
set.seed(seed)
k <- x["Var1"]
est <- thetas_to_par_Etable(std_qp[,1], std_qp[,2], k, dc_E_LL, dc_E_GR)
c(K=k, par = c(est$pa, rep(NA, 8-k)), conv = est$convergence)
})
t(res_ii)
curve(davidRian::ddc(x, 0, 1, t(res_ii)[8, 2:9]), from = -6, to = 6)
